//Kolton Klette
//Professor John Matta
//CS-340 - Algorithms and Data Structure
//March 10th, 2021

import java.util.*;
import java.io.*;
import java.util.LinkedList;

public class Hash
{
    //Global Variables
    private int hashSize;
    private boolean checkIfIn; //checks to the make sure if an item already exists within the linked list
    
    //WordInfo info;
    private LinkedList<WordInfo>[] hashMap;
    
    public Hash(int hashSize)
    {
        this.hashSize = hashSize;
        hashMap = new LinkedList[hashSize];
    }
    
    public int getSize()
    {
        return hashSize;
    }
    
    public int getIndex(int hashValue) 
    {
        int temp;
        
        temp = Math.abs(hashValue) % hashSize; //calculates the index at which information is inserted into the hashTable
        
        return temp;
    }
    
    public void insert(WordInfo wordInfo, String word, int hashValue)
    {
        //Sets the passed in word to the wordInfo object
        wordInfo.setWord(word);
        
        //Insert the wordInfo object into the proper position of the hash
        if(hashMap[getIndex(hashValue)] == null)
        {
            hashMap[getIndex(hashValue)] = new LinkedList<WordInfo>();
        }
        checkIfIn = true;
        
        for(int i = 0; i < hashMap[getIndex(hashValue)].size(); i++)
        {
            if(wordInfo.getWord().equals(hashMap[getIndex(hashValue)].get(i).getWord()))
            {
                checkIfIn = false;
                hashMap[getIndex(hashValue)].get(i).increaseCount();
                break;
            }
        }
        
        if(checkIfIn == true)
        {
            hashMap[getIndex(hashValue)].add(wordInfo);
        }
    }

    public void printHash(String num) throws IOException
    {
        //Variable Declaration
        String fileName = "Project3Output" + num + ".csv"; //formats the name of the .csv file generated by the code, using the string passed into the array
        ListIterator iterator;
        FileWriter write = new FileWriter(fileName);
        PrintWriter fileType = new PrintWriter(write);
        
        int iterate = 0;
        Object tempObj;
        
        //Printing Control
        fileType.printf("Words" + ", " + "Count" + ", " + "Steps" + ", " + "Step(s) Per Repetition\n");
        for (int i = 0; i < hashMap.length; i++)
        {
            if(hashMap[i] == null)
            {
                //Nothing occurs if the desired item is detected as null during iteration
            }
            else
            {
                iterator = hashMap[i].listIterator();
                iterate = 0;
                while(iterator.hasNext())
                {
                    tempObj = iterator.next();
                    hashMap[i].get(iterate).calculateSteps( (iterate + 1) , hashMap[i].get(iterate).getCount() );
                    fileType.println(hashMap[i].get(iterate).getWord() + ", " + hashMap[i].get(iterate).getCount() + ", " + hashMap[i].get(iterate).getSteps() + ", " + (iterate + 1));
                    
                    iterate++;
                }
            }
        }
        
        fileType.close();
    }
}

